name: GitHub Actions Demo

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  repository_dispatch:
    types: [coda-event]  
jobs:
  request-export-doc:
    if: github.event_name == 'repository_dispatch'
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: /home/runner/work/TWL/TWL/SyncCodaAndGithub/python
    steps:
      - name: 현재 디렉터리 위치 출력
        run: pwd
      - name: 현재 디렉터리 내용 출력
        run: ls -al
      - name: Check out repository code
        # {소유자}/{저장소명}@{참조자(버전)}
        uses: actions/checkout@v2
      - name: action 사용 후에 내용 출력
        run: ls -al
      - name: API Key 출력
        run: echo ${{secrets.CODA_API_KEY}}
      - name: PYTHON 경로 확인
        run: echo $PYTHONPATH
      - name: python3 SyncCodaAndGithub/python/main/entry_point.py ${{secrets.CODA_API_KEY}}
        working-directory: ./SyncCodaAndGithub/python/main
        run: python3 entry_point.py ${{secrets.CODA_API_KEY}}
      - name: 저장한 파일 이동
        run: mv ../../doc/ ../../../
      - name: 현재 경로 출력
        run: ls -al
      - name: 현재 branch 출력
        run: git branch
      - name: 수정 문서 레포지토리에 업데이트
        run: |
          git config --global user.name 'jonathan'
          git config --global user.email 'ghkddlsrb96@gmail.com'
          git commit -am "Automated report"
          git push

  end-to-end-test:
    if: github.event_name == 'pull_request' && github.event.action == 'opened' && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: /home/runner/work/TWL/TWL/SyncCodaAndGithub/python
    steps:
      - name: 현재 디렉터리 위치 출력
        run: pwd
      - name: 현재 디렉터리 내용 출력
        run: ls -al
      - name: Check out repository code
        # {소유자}/{저장소명}@{참조자(버전)}
        uses: actions/checkout@v2
      - name: action 사용 후에 내용 출력
        run: ls -al
      - name: End to End test
        working-directory: ./SyncCodaAndGithub/python/test
        run: python3 test_coda_api.py ${{secrets.CODA_API_KEY}}